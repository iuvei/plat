<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<description>Spring公共配置 </description>
	<!--解析资源文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<context:annotation-config />

	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" lazy-init="true">
        <description>portal</description>
        <property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="filters" value="${filters}" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!-- 事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*"  propagation="REQUIRED" />
			<tx:method name="query*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceMethmods"
			expression="execution(* com.gameportal.manage.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="serviceMethmods" advice-ref="txAdvice" />
	</aop:config>
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--ibatis的sqlMapClient -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- BEGIN 解决responseBody返回乱码数据 注意此配置放在context:component-scan前！ -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=utf-8</value>
							<value>text/html;charset=utf-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 平台余额查询(每隔一个小时存一次平台余额)  -->	
	<bean id="platMoney" class="com.gameportal.manage.reportform.task.PlatformMoney" /> 	
	<task:scheduler id="mySchedulerPlatMoney" pool-size="3"/> 
	 <task:scheduled-tasks scheduler="mySchedulerPlatMoney">
		<task:scheduled ref="platMoney" method="run" cron="0 0 */1 * * ?"/>		
	</task:scheduled-tasks>
	
	<!-- 首充记录查询(每隔10分钟查询一次)  -->
	<bean id="collectFcMember" class="com.gameportal.manage.reportform.task.CollectFcMember" /> 	
	<task:scheduler id="mySchedulerFc" pool-size="3"/> 
	 <task:scheduled-tasks scheduler="mySchedulerFc">
		<task:scheduled ref="collectFcMember" method="run" cron="0 */10 * * * ?"/>		
	</task:scheduled-tasks>
	
	<!-- 系统日报表统计(凌晨00:30分钟查询一次)  -->
	<bean id="collectDailyReport" class="com.gameportal.manage.reportform.task.DailyReport" /> 	
	<task:scheduler id="mySchedulerDaily" pool-size="3"/> 
	 <task:scheduled-tasks scheduler="mySchedulerDaily">
		<task:scheduled ref="collectDailyReport" method="run" cron="0 30 0 * * ?"/>		
	</task:scheduled-tasks>
	
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- END 解决responseBody返回乱码数据 ,同时注释掉<mvc:annotation-driven /> -->
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.gameportal.manage" />
</beans>