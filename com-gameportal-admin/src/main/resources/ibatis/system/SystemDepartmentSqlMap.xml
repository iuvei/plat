<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="SystemDepartment">

    <typeAlias alias="systemDepartment" type="com.gameportal.manage.system.model.SystemDepartment"/>

    <resultMap id="systemDepartmentResult" class="systemDepartment">
        <result property="sdid" column="sdid"/>
        <result property="departmentKey" column="department_key"/>
        <result property="departmentValue" column="department_value"/>
        <result property="pdid" column="pdid"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        	sdid ,
        	department_key ,
        	department_value ,
        	pdid ,
        	description ,
        	status ,
        	create_date ,
        	update_date 
	    ]]>
	</sql>
	
    <insert id="insert" parameterClass="systemDepartment">
    <![CDATA[
        INSERT INTO
        system_department (
        	sdid ,
        	department_key ,
        	department_value ,
        	pdid ,
        	description ,
        	status ,
        	create_date ,
        	update_date 
        ) VALUES (
        	#sdid# ,
        	#departmentKey# ,
        	#departmentValue# ,
        	#pdid# ,
        	#description# ,
        	#status# ,
        	#createDate# ,
        	#updateDate# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL system_department_SEQ.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="sdid" >
           SELECT  last_insert_id()
        </selectKey>
    </insert>

    <update id="update" parameterClass="systemDepartment">
    <![CDATA[
        UPDATE system_department SET
	        department_key = #departmentKey# ,
	        department_value = #departmentValue# ,
	        pdid = #pdid# ,
	        description = #description# ,
	        status = #status# ,
	        create_date = #createDate# ,
	        update_date = #updateDate# 
        WHERE 
	        sdid = #sdid# 
    ]]>
    </update>

    <delete id="delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from system_department where
        sdid = #sdid# 
    ]]>
    </delete>
    
    <select id="getById" resultMap="systemDepartmentResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	        from system_department 
	        where 
		        sdid = #sdid# 
	    ]]>
    </select>

	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	       <isNotEmpty prepend="AND" property="sdid">
	             sdid = #sdid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="departmentKey">
	             department_key = #departmentKey#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="departmentValue">
	             department_value = #departmentValue#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="pdid">
	             pdid = #pdid#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="description">
	             description = #description#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="status">
	             status = #status#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="createDate">
	             create_date = #createDate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="updateDate">
	             update_date = #updateDate#
	       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="count" resultClass="long">
    <![CDATA[
        select count(0) from system_department
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="systemDepartmentResult">
    	select <include refid="commonColumns"/>
	    <![CDATA[
	        from system_department 
	    ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

	
</sqlMap>
